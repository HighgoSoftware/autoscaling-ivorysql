---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: static-cdi-nfs
spec:
  config: '{
    "cniVersion": "0.3.1",
    "name": "overlay",
    "type": "bridge",
    "bridge": "vm-bridge0",
    "isDefaultGateway": false,
    "isGateway": false,
    "ipam": {
      "type": "static",
      "addresses": [{"address": "10.77.77.5/24"}],
      "routes": [{ "dst": "10.77.0.0/16" }]
    }
  }'

---
apiVersion: v1
kind: Endpoints
metadata:
  name: nfs-server
subsets:
- addresses:
  - ip: 10.77.0.1

---
apiVersion: v1
kind: Service
metadata:
  name: nfs-server
spec:
  clusterIP: None

---
apiVersion: cdi.kubevirt.io/v1beta1
kind: DataVolume
metadata:
  name: postgres14-cdi-nfs
  annotations:
    cdi.kubevirt.io/storage.deleteAfterCompletion: "false"
spec:
  source:
    registry:
      url: "docker://cicdteam/vm-alpine-p14-cdi-nfs:3"
  pvc:
    accessModes:
      - ReadWriteMany
    storageClassName: longhorn
    resources:
      requests:
        storage: 2Gi

---
apiVersion: virt.virtink.smartx.com/v1alpha1
kind: VirtualMachine
metadata:
  name: postgres14-cdi-nfs
spec:
  # run policy could be Always, RerunOnFailure, Once, Manual,Halted
  runPolicy: Always
  instance:
    memory:
      size: 1Gi
    kernel:
      image: cicdteam/clh-kernel:5.15.12
      imagePullPolicy: IfNotPresent
      cmdline: "console=ttyS0 root=/dev/vda rw"
    disks:
      - name: disk
    interfaces:
      - name: pod
        masquerade:
          cidr: 10.0.2.0/30
      - name: overlay
        masquerade:
          cidr: 10.0.3.0/30
  networks:
    - name: pod
      pod: {}
    - name: overlay
      multus:
        networkName: static-cdi-nfs
  volumes:
    - name: disk
      dataVolume:
        volumeName: postgres14-cdi-nfs
